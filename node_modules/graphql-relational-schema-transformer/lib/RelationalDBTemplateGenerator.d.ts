import { TemplateContext } from './RelationalDBSchemaTransformer';
import Template from 'cloudform-types/types/template';
/**
 * This is the Class responsible for generating and managing the CloudForm template
 * provided a TemplateContext object, which is generated by the RelationalDBSchemaTransformer.
 *
 * It will generate the basic CloudForm template needed for getting the AppSync API and
 * RDS DataSource provisioned. It also allows for adding the CRUDL+Q Resolvers upon need.
 */
export declare class RelationalDBTemplateGenerator {
    context: TemplateContext;
    constructor(context: TemplateContext);
    /**
     * Creates and returns the basic Cloudform template needed for setting
     * up an AppSync API pointing at the RDS DataSource.
     *
     * @returns the created CloudFormation template.
     */
    createTemplate(context: any): Template;
    /**
     * Provided a Cloudform Template, this method adds Resolver Resources to the
     * Template.
     *
     * @param template - the Cloudform template
     * @returns the given template, updated with new resolvers.
     */
    addRelationalResolvers(template: Template, resolverFilePath: string): Template;
    /**
     * Provided a Cloudform Template, this method returns the cfn json template as a string
     *
     * @param template - the Cloudform template
     * @returns the json, string form of the template given.
     */
    printCloudformationTemplate(template: Template): string;
    /**
     * Creates any Parmaters needed for the CFN Template
     *
     * @param databaseName - the name of the database being parsed.
     * @returns the parameters for the template.
     */
    private makeParameters;
    /**
     * Creates the IAM Role CFN Spec to allow AppSync to interact with the RDS cluster
     *
     * @returns the IAM role CloudFormation resource.
     */
    private makeIAMDataSourceRole;
    /**
     * Creates the AppSync DataSource CFN Spec pointing at the provided RDS Cluster
     *
     * @param cliContext - the Amplify context, used to load environment variables.
     * @returns the data source CloudFormation resource.
     */
    private makeRelationalDataSource;
}
