{"ast":null,"code":"var _jsxFileName = \"/Users/johnrobertson/development/react-scaffold/src/routes/9-pageSandboxAPI/index.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Button } from 'reactstrap';\nimport { Link } from \"react-router-dom\";\n\nclass SandboxAPI extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {}\n    };\n    this.apiKey = '65f442d2887f1b26eb19ee6075e6da55';\n    this.url = `https://api.openweathermap.org/data/2.5/weather?q=Atlanta,us&APPID=${this.apiKey}`;\n    this.style = {\n      color: 'darkgrey'\n    };\n\n    this.properCase = function () {\n      const string = this.state.data.weather[0].description;\n      return string[0].toUpperCase() + string.slice(1);\n    };\n  }\n\n  // API call in componentDidMount lifecycle method (best practice)\n  componentDidMount() {\n    fetch(this.url).then(res => res.json()).then(data => {\n      this.setState({\n        data: data\n      });\n      if (data.cod === 401) console.log(\"Rendered path '/route-api' - SandboxAPI (w/o data).\"); // console.log(data);\n    }).catch(error => {\n      console.log(\"Rendered path '/route-api' - SandboxAPI (w/o data).\");\n      console.log(error);\n    });\n  }\n\n  render() {\n    // conditionally render based on API response validation\n    if (this.state.data.cod === 401 || this.state.data.main === undefined) {\n      // render if API response fails\n      return React.createElement(\"div\", {\n        className: \"page-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: this.style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"No data available!\")))));\n    } else {\n      console.log(\"Rendered path '/route-api' - SandboxAPI (with data).\"); // render if API response succeeds\n\n      return React.createElement(\"div\", {\n        className: \"page-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Route API\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Simple API Example\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"The current temp in \", this.state.data.name, \" is \", Math.round((this.state.data.main.temp - 273.15) * (9 / 5) + 32).toFixed(0), \" degrees with \", this.state.data.wind.speed, \" mph winds.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), this.properCase(), \" with \", this.state.data.main.humidity, \"% humidity.\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Homepage\")), React.createElement(Link, {\n        to: \"/route-index\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"App Index\"))))));\n    }\n  }\n\n}\n\nexport default SandboxAPI;","map":{"version":3,"sources":["/Users/johnrobertson/development/react-scaffold/src/routes/9-pageSandboxAPI/index.js"],"names":["React","Component","Container","Row","Col","Button","Link","SandboxAPI","state","data","apiKey","url","style","color","properCase","string","weather","description","toUpperCase","slice","componentDidMount","fetch","then","res","json","setState","cod","console","log","catch","error","render","main","undefined","name","Math","round","temp","toFixed","wind","speed","humidity"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Row, Col, Button } from 'reactstrap';\nimport { Link } from \"react-router-dom\";\n\nclass SandboxAPI extends Component {\n    state = {\n        data: {}\n    }\n\n    // API configuration\n    apiKey = '65f442d2887f1b26eb19ee6075e6da55';\n    url = `https://api.openweathermap.org/data/2.5/weather?q=Atlanta,us&APPID=${this.apiKey}`;\n\n    // style for failed API call\n    style = {\n        color: 'darkgrey'\n    }\n\n    // Proper capitalization for API response data\n    properCase = function () {\n        const string = this.state.data.weather[0].description;\n        return string[0].toUpperCase() + string.slice(1);\n    }\n\n    // API call in componentDidMount lifecycle method (best practice)\n    componentDidMount() {\n        fetch(this.url)\n            .then(res => res.json())\n            .then((data) => {\n                this.setState({\n                    data: data\n                });\n                if (data.cod === 401) console.log(\"Rendered path '/route-api' - SandboxAPI (w/o data).\");\n                // console.log(data);\n            })\n            .catch(error => {\n                console.log(\"Rendered path '/route-api' - SandboxAPI (w/o data).\");\n                console.log(error);\n            })\n    }\n\n    render() {\n        // conditionally render based on API response validation\n        if (this.state.data.cod === 401 || this.state.data.main === undefined) {\n            // render if API response fails\n            return (\n                <div className=\"page-wrapper\">\n                    <Container>\n                        <Row>\n                            <Col>\n                                <div style={this.style}>\n                                    No data available!\n                                    </div>\n                            </Col>\n                        </Row>\n                    </Container>\n                </div>\n            )\n        } else {\n            console.log(\"Rendered path '/route-api' - SandboxAPI (with data).\");\n            // render if API response succeeds\n            return (\n                <div className=\"page-wrapper\">\n                    <Container>\n                        <Row>\n                            <Col lg={6}>\n                                <h1>Route API</h1>\n                                <h3>Simple API Example</h3>\n                                <br />\n                                <p>The current temp in {this.state.data.name} is {Math.round((this.state.data.main.temp - 273.15) * (9 / 5) + 32).toFixed(0)} degrees with {this.state.data.wind.speed} mph winds.<br />\n                                    {this.properCase()} with {this.state.data.main.humidity}% humidity.</p>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Link to='/'>\n                                    <Button className='btn'>\n                                        Homepage\n                                 </Button>\n                                </Link>\n                                <Link to='/route-index'>\n                                    <Button className='btn'>\n                                        App Index\n                                </Button>\n                                </Link>\n                            </Col>\n                        </Row>\n                    </Container>\n                </div>\n            )\n        }\n    }\n}\n\nexport default SandboxAPI"]},"metadata":{},"sourceType":"module"}