{"ast":null,"code":"var _jsxFileName = \"/Users/johnrobertson/development/waycaster-aws/src/components/ScrollPanel/ScrollTester.js\";\nimport React, { Component } from 'react';\nimport Panel from './panel';\nconst style = {\n  width: '100%',\n  height: '90vh',\n  fontSize: '1em',\n  // lineHeight: '0.66em',\n  padding: '2em'\n};\n\nclass ScrollTester extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scrollStatus: 'end',\n      panelCurrent: 0,\n      scrollDirection: 'down',\n      panelNext: '',\n      disableScroll: false,\n      panels: [{\n        title: 'landing'\n      }, {\n        title: 'BORK',\n        blurb: 'A fun little project with a big heart.  Swipe-based dog adoption app modeled on Tinder features.',\n        year: '2019 June',\n        client: 'Georgia Tech - Conceptual Demo',\n        color: 'purple'\n      }, {\n        title: 'IMMERSIO',\n        blurb: 'A real-time language translation messenger app.  Cheers!',\n        year: '2019 August',\n        client: 'Georgia Tech - Conceptual Demo',\n        color: 'blue'\n      }, {\n        title: 'Shrug',\n        blurb: 'Date planning app for the laziest of us.  I use it all the time.',\n        year: 2019,\n        client: 'Georgia Tech',\n        color: 'orangered'\n      }, {\n        title: 'Atlanta CFO Forum',\n        blurb: \"Job Board and Event Planning site for Atlanta's top exectuive talent.\",\n        year: 2019,\n        client: 'The Atlanta CFO Forum',\n        color: 'navy'\n      }, {\n        title: 'Waycaster Allred',\n        blurb: \"Job Board and Event Planning site for Atlanta's top exectuive talent.\",\n        year: 2019,\n        client: 'Waycaster and Allred, Attorneys at Law',\n        color: 'crimson'\n      }, {\n        title: 'Popa Duck Lodge',\n        blurb: \"Job Board and Event Planning site for Atlanta's top exectuive talent.\",\n        year: 2019,\n        client: 'Waycaster and Allred, Attorneys at Law',\n        color: 'green'\n      }, {\n        title: 'Thank You',\n        blurb: null,\n        year: '',\n        client: 'tiktaalikdesign@gmail.com'\n      }]\n    }; // initial timeout\n\n    this._timeout = null; // bind the scroll handler to the instance\n\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  handleScroll(e) {\n    // deltaY helps prevent errant scrolling by firing only if scroll Y exceeds a threshold - critical!!!\n    // determines scroll sensitivity\n    if (e.deltaY >= 10 || e.deltaY <= 0) {\n      // check for direction\n      if (e.nativeEvent.wheelDelta > 0) {\n        this.setState({\n          direction: 'up'\n        });\n      } else {\n        if (e.nativeEvent.wheelDelta < 0) this.setState({\n          direction: 'down'\n        });\n      }\n    }\n\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    this._timeout = setTimeout(() => {\n      this._timeout = null;\n      this.setState({\n        scrollStatus: 'end'\n      }); // handle scroll render!!!\n\n      if (this.state.scrollStatus === 'end') {\n        // handle view change here!!!\n        // console.log(this.state.scrollStatus);\n        let current = this.state.panelCurrent;\n        const length = this.state.panels.length;\n        let direction = this.state.direction;\n        let panelNext = this.state.panelNext; // console.log(length);\n        // set next panel\n\n        if (direction === 'down') {\n          panelNext = this.state.panelCurrent + 1;\n          this.setState({\n            panelNext: panelNext\n          });\n        } else {\n          panelNext = this.state.panelCurrent - 1;\n          this.setState({\n            panelNext: panelNext\n          });\n        } // check limits and renders new view\n\n\n        if (this.state.panelNext > length - 1 || this.state.panelNext < 0) {// console.log('Scroll threshold reached!');\n        } else {\n          if (this.state.disableScroll) {\n            console.log('Prevented accidental scroll!');\n            console.log(this.state.scrollDirection);\n          } else {\n            this.setState({\n              panelCurrent: panelNext,\n              disableScroll: true\n            });\n            setTimeout(() => {\n              this.setState({\n                disableScroll: false\n              });\n              cons;\n            }, 444); // log out the movements\n\n            console.log(`d: ${this.state.direction} c: ${this.state.panelCurrent} > n: ${this.state.panelNext}`);\n          }\n        }\n      }\n    }, 11); // timeout after scroll end before executing view update (critical to catch scroll end)\n    // set the scrolling status while moving\n\n    if (this.state.scrollStatus !== 'scrolling') {\n      this.setState({\n        scrollStatus: 'scrolling'\n      });\n    }\n  }\n\n  render() {\n    console.log(this.state.panelCurrent);\n    console.log(this.length);\n    return React.createElement(\"div\", {\n      style: style,\n      onScroll: this.handleScroll,\n      onWheel: this.handleScroll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Panel, {\n      view: this.state.panels[this.state.panelCurrent],\n      state: this.state,\n      keys: this.state.panelCurrent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ScrollTester;","map":{"version":3,"sources":["/Users/johnrobertson/development/waycaster-aws/src/components/ScrollPanel/ScrollTester.js"],"names":["React","Component","Panel","style","width","height","fontSize","padding","ScrollTester","constructor","props","state","scrollStatus","panelCurrent","scrollDirection","panelNext","disableScroll","panels","title","blurb","year","client","color","_timeout","handleScroll","bind","e","deltaY","nativeEvent","wheelDelta","setState","direction","clearTimeout","setTimeout","current","length","console","log","cons","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Panel from './panel';\n\nconst style = {\n    width: '100%',\n    height: '90vh',\n    fontSize: '1em',\n    // lineHeight: '0.66em',\n    padding: '2em',\n}\n\nclass ScrollTester extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            scrollStatus: 'end',\n            panelCurrent: 0,\n            scrollDirection: 'down',\n            panelNext: '',\n            disableScroll: false,\n            panels: [\n                {\n                    title: 'landing'\n                },\n                {\n                    title: 'BORK',\n                    blurb: 'A fun little project with a big heart.  Swipe-based dog adoption app modeled on Tinder features.',\n                    year: '2019 June',\n                    client: 'Georgia Tech - Conceptual Demo',\n                    color: 'purple',\n                },\n                {\n                    title: 'IMMERSIO',\n                    blurb: 'A real-time language translation messenger app.  Cheers!',\n                    year: '2019 August',\n                    client: 'Georgia Tech - Conceptual Demo',\n                    color: 'blue'\n                },\n                {\n                    title: 'Shrug',\n                    blurb: 'Date planning app for the laziest of us.  I use it all the time.',\n                    year: 2019,\n                    client: 'Georgia Tech',\n                    color: 'orangered'\n                },\n                {\n                    title: 'Atlanta CFO Forum',\n                    blurb: \"Job Board and Event Planning site for Atlanta's top exectuive talent.\",\n                    year: 2019,\n                    client: 'The Atlanta CFO Forum',\n                    color: 'navy'\n                },\n                {\n                    title: 'Waycaster Allred',\n                    blurb: \"Job Board and Event Planning site for Atlanta's top exectuive talent.\",\n                    year: 2019,\n                    client: 'Waycaster and Allred, Attorneys at Law',\n                    color: 'crimson'\n                },\n                {\n                    title: 'Popa Duck Lodge',\n                    blurb: \"Job Board and Event Planning site for Atlanta's top exectuive talent.\",\n                    year: 2019,\n                    client: 'Waycaster and Allred, Attorneys at Law',\n                    color: 'green'\n                },{\n                    title: 'Thank You',\n                    blurb: null,\n                    year: '',\n                    client: 'tiktaalikdesign@gmail.com'\n                }\n            ]\n        };\n\n        // initial timeout\n        this._timeout = null;\n\n        // bind the scroll handler to the instance\n        this.handleScroll = this.handleScroll.bind(this);\n    }\n\n    \n    handleScroll(e) {\n        // deltaY helps prevent errant scrolling by firing only if scroll Y exceeds a threshold - critical!!!\n        // determines scroll sensitivity\n\n        if (e.deltaY >= 10 || e.deltaY <= 0) {\n            // check for direction\n            if (e.nativeEvent.wheelDelta > 0) {\n                this.setState({\n                    direction: 'up'\n                })\n            } else {\n                if (e.nativeEvent.wheelDelta < 0)\n                    this.setState({\n                        direction: 'down'\n                    })\n            }\n        }\n\n        if (this._timeout) {\n            clearTimeout(this._timeout);\n        }\n\n        this._timeout = setTimeout(() => {\n            this._timeout = null;\n            this.setState({\n                scrollStatus: 'end'\n            })\n\n        \n\n            // handle scroll render!!!\n            if (this.state.scrollStatus === 'end') {\n                    // handle view change here!!!\n                    // console.log(this.state.scrollStatus);\n            let current = this.state.panelCurrent;\n            const length = this.state.panels.length;\n            let direction = this.state.direction;\n            let panelNext = this.state.panelNext;\n            \n            // console.log(length);\n                // set next panel\n                if (direction === 'down') {\n                    panelNext = this.state.panelCurrent + 1\n                    this.setState({\n                        panelNext: panelNext\n                    });\n                } else {\n                    panelNext = this.state.panelCurrent - 1\n                    this.setState({\n                        panelNext: panelNext\n                    });\n                }\n\n                // check limits and renders new view\n                if (this.state.panelNext > length - 1 || this.state.panelNext < 0) {\n                    // console.log('Scroll threshold reached!');\n                } else {\n                    if (this.state.disableScroll) {\n                        console.log('Prevented accidental scroll!');\n                        console.log(this.state.scrollDirection);\n                    } else {\n                        this.setState({\n                            panelCurrent: panelNext,\n                            disableScroll: true\n                        });\n                        setTimeout(() => {\n                            this.setState({\n                                disableScroll: false\n                            });\n                            cons\n                        }, 444);\n                        // log out the movements\n                        console.log(`d: ${this.state.direction} c: ${this.state.panelCurrent} > n: ${this.state.panelNext}`);\n                    }\n                }\n            }\n        }, 11); // timeout after scroll end before executing view update (critical to catch scroll end)\n\n        // set the scrolling status while moving\n        if (this.state.scrollStatus !== 'scrolling') {\n            this.setState({\n                scrollStatus: 'scrolling'\n            });\n        }\n    }\n\n    render() {\n        console.log(this.state.panelCurrent);\n        console.log(this.length);\n        return <div style={style} onScroll={this.handleScroll} onWheel={this.handleScroll}>\n            {/* <p>JOHN ROBERTSON</p>\n            <br /> */}\n            <Panel view={this.state.panels[this.state.panelCurrent]} state={this.state} keys={this.state.panelCurrent} />\n        </div>\n    }\n}\n\nexport default ScrollTester\n"]},"metadata":{},"sourceType":"module"}